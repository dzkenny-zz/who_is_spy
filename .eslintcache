[{"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\reportWebVitals.ts":"1","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\common.ts":"2","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\room.ts":"3","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\utils\\request.ts":"4","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\game.ts":"5","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\app.ts":"6","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\actions\\app.ts":"7","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\player.ts":"8","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\index.tsx":"9","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\actions\\game.ts":"10","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\index.tsx":"11","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\setting.ts":"12","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\setting.tsx":"13","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\index.tsx":"14","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\routers\\index.tsx":"15","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\home\\index.tsx":"16","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\splash\\index.tsx":"17","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\login\\index.tsx":"18","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\App.tsx":"19","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\audio.ts":"20","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\gameBoard.tsx":"21","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\index.ts":"22","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\info.tsx":"23","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\peopleList.tsx":"24","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\index.tsx":"25","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\avatar\\index.tsx":"26","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\name.tsx":"27","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\avatar.tsx":"28","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\avatar.ts":"29"},{"size":440,"mtime":1608256494315,"results":"30","hashOfConfig":"31"},{"size":225,"mtime":1608523018117,"results":"32","hashOfConfig":"31"},{"size":946,"mtime":1608636481562,"results":"33","hashOfConfig":"31"},{"size":270,"mtime":1608537212822,"results":"34","hashOfConfig":"31"},{"size":611,"mtime":1608640621267,"results":"35","hashOfConfig":"31"},{"size":1054,"mtime":1608696130624,"results":"36","hashOfConfig":"31"},{"size":5365,"mtime":1608706853846,"results":"37","hashOfConfig":"31"},{"size":724,"mtime":1608605477252,"results":"38","hashOfConfig":"31"},{"size":2121,"mtime":1608705421933,"results":"39","hashOfConfig":"31"},{"size":6927,"mtime":1608697846037,"results":"40","hashOfConfig":"31"},{"size":1382,"mtime":1608689809244,"results":"41","hashOfConfig":"31"},{"size":789,"mtime":1608635748715,"results":"42","hashOfConfig":"31"},{"size":4977,"mtime":1608641953341,"results":"43","hashOfConfig":"31"},{"size":517,"mtime":1608256494310,"results":"44","hashOfConfig":"31"},{"size":873,"mtime":1608626671392,"results":"45","hashOfConfig":"31"},{"size":2955,"mtime":1608695730516,"results":"46","hashOfConfig":"31"},{"size":544,"mtime":1608523202194,"results":"47","hashOfConfig":"31"},{"size":1823,"mtime":1608541669444,"results":"48","hashOfConfig":"31"},{"size":230,"mtime":1608256494306,"results":"49","hashOfConfig":"31"},{"size":326,"mtime":1608604791769,"results":"50","hashOfConfig":"31"},{"size":5080,"mtime":1608694454317,"results":"51","hashOfConfig":"31"},{"size":414,"mtime":1608604811745,"results":"52","hashOfConfig":"31"},{"size":1648,"mtime":1608642184432,"results":"53","hashOfConfig":"31"},{"size":4091,"mtime":1608703428903,"results":"54","hashOfConfig":"31"},{"size":683,"mtime":1608691639906,"results":"55","hashOfConfig":"31"},{"size":909,"mtime":1608696665866,"results":"56","hashOfConfig":"31"},{"size":1926,"mtime":1608695839871,"results":"57","hashOfConfig":"31"},{"size":2257,"mtime":1608696575006,"results":"58","hashOfConfig":"31"},{"size":502,"mtime":1608706800421,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1vww63k",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\reportWebVitals.ts",[],["137","138"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\common.ts",["139"],"import { Socket } from \"socket.io-client\";\r\n\r\nexport enum ActionState  {\r\n    INITIAL = 'INITIAL',\r\n    IN_PROGRESS = 'IN_PROGRESS',\r\n    SUCCESS = 'SUCCESS',\r\n    FAILURE = 'FAILURE'\r\n}\r\n\r\nexport type Socket = typeof Socket;",["140","141"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\room.ts",["142"],"import { Setting } from \"./setting\";\r\nimport { Player } from \"./player\";\r\nimport * as _ from 'lodash';\r\n\r\nexport class Room {\r\n    id: string = '';\r\n    status: 'waiting' | 'progress' | 'end' = 'waiting';\r\n    players: Player[] = [];\r\n    setting: Setting = new Setting({});\r\n    host: string = '';\r\n\r\n    constructor(data: Partial<Room>) {\r\n        this.parse(data);\r\n    }\r\n\r\n    parse = (data: Partial<Room>) => {\r\n        this.id = data.id || '';\r\n        this.status = data.status || 'waiting';\r\n        this.players = (data.players || []).map(player => new Player(player));\r\n        this.setting = new Setting(data.setting || {});\r\n        this.host = data.host || '';\r\n    }\r\n\r\n    toJson = () => {\r\n        return {\r\n            id: this.id,\r\n            status: this.status,\r\n            host: this.host,\r\n            players: this.players.map(player => player.toJson()),\r\n            setting: this.setting.toJson()\r\n        };\r\n    }\r\n}",["143","144"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\utils\\request.ts",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\game.ts",["145"],"import { extendObservable } from 'mobx';\r\nimport * as _ from 'lodash';\r\nimport { Room } from '../models/room';\r\n\r\nexport class GameStore {\r\n    room: Room = new Room({});\r\n    refresh: boolean = false;\r\n    winner: string = '';\r\n\r\n    constructor() {\r\n        extendObservable(this, {\r\n            room: new Room({}),\r\n            refresh: false,\r\n            winner: ''\r\n        });\r\n    }\r\n\r\n    setRoom = (room: Room) => {\r\n        this.room = room;\r\n        this.refresh = !this.refresh;\r\n    }\r\n\r\n    setWinner = (winner: string) => {\r\n        this.winner = winner;\r\n    }\r\n}\r\n\r\nexport default GameStore;\r\n",["146","147"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\app.ts",["148"],"import { extendObservable } from 'mobx';\r\nimport * as _ from 'lodash';\r\nimport { ActionState, Socket } from '../models/common';\r\nimport { User } from '../models/user';\r\n\r\n\r\nexport class AppStore {\r\n    socket? : Socket;\r\n    user: User = {\r\n        id: '',\r\n        username: '',\r\n        avatar: ''\r\n    };\r\n    loginState: ActionState = ActionState.INITIAL;\r\n    loading: boolean = false;\r\n\r\n    constructor() {\r\n        extendObservable(this, {\r\n            socket: null,\r\n            user: {\r\n                id: '',\r\n                username: '',\r\n                avatar: ''\r\n            },\r\n            loginState: ActionState.INITIAL,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    setSocket = (socket: Socket) => {\r\n        this.socket = socket;\r\n    }\r\n\r\n    setUser = (user: User) => {\r\n        this.user = user;\r\n    }\r\n\r\n    setLoginState = (loginState: ActionState) => {\r\n        this.loginState = loginState;\r\n    }\r\n\r\n    setLoading = (loading: boolean) => {\r\n        this.loading = loading;\r\n    }\r\n}\r\n\r\nexport default AppStore;\r\n","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\actions\\app.ts",["149","150","151","152","153","154"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\player.ts",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\index.tsx",["155","156"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\actions\\game.ts",["157","158"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\index.tsx",["159","160","161"],"import { observer } from 'mobx-react';\r\nimport React, { useEffect } from 'react';\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\nimport './styles.css';\r\nimport { useStores } from '../../stores';\r\nimport { useHistory } from 'react-router';\r\nimport { removeWaitingRoomListener, initWaitingRoomListener } from '../../actions/game';\r\nimport PeopleListComponent from './peopleList';\r\nimport SettingComponent from './setting';\r\nimport ToolbarComponent from '../../components/toolbar';\r\n\r\nconst WaitingRoomPage = observer(() => {\r\n    const stores = useStores();\r\n    const history = useHistory();\r\n\r\n    const { room, refresh } = stores.gameStore;\r\n    const { host, id } = room;\r\n\r\n    useEffect(() => {\r\n        initWaitingRoomListener({ stores, history });\r\n\r\n        return () => {\r\n            removeWaitingRoomListener({ stores })\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            {refresh}\r\n            <Card className=\"card\">\r\n                <CardContent>\r\n                    <ToolbarComponent title={`遊玩房間 #${id}`} />\r\n                    <div className=\"waiting-content\">\r\n                        <PeopleListComponent />\r\n                        <SettingComponent />\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default WaitingRoomPage;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\setting.ts",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\setting.tsx",["162"],"import { observer } from 'mobx-react';\r\nimport React, { useState } from 'react';\r\nimport { Typography, Select, MenuItem, InputLabel, FormControl, Button, FormControlLabel, Switch, TextField } from '@material-ui/core';\r\nimport './styles.css';\r\nimport { useStores } from '../../stores';\r\nimport { useHistory } from 'react-router';\r\nimport { quitRoom, updateBlankNumber, updateHost, updateSpyNumber, startGame, updateIsRandom } from '../../actions/game';\r\n\r\nconst genMenuItems = (key: string) => {\r\n    return [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(index => (\r\n        <MenuItem key={`${key}-${index}`} value={index}>{index}</MenuItem>\r\n    ));\r\n}\r\n\r\nconst SettingComponent = observer(() => {\r\n    const stores = useStores();\r\n    const history = useHistory();\r\n\r\n    const [correct, setCorrect] = useState('');\r\n    const [wrong, setWrong] = useState('');\r\n\r\n    const { user } = stores.appStore;\r\n    const { room, refresh } = stores.gameStore;\r\n    const { host, setting } = room;\r\n    const isHost = user.id === host;\r\n\r\n    const handleSpyChange = (event: any) => {\r\n        updateSpyNumber({\r\n            stores,\r\n            number: event.target.value\r\n        });\r\n    }\r\n\r\n    const handleBlankChange = (event: any) => {\r\n        updateBlankNumber({\r\n            stores,\r\n            number: event.target.value\r\n        });\r\n    }\r\n\r\n    const handleIsRandomChange = (event: any) => {\r\n        if (!isHost) {\r\n            return;\r\n        }\r\n\r\n        updateIsRandom({\r\n            stores,\r\n            isRandom: event.target.checked\r\n        });\r\n    }\r\n\r\n    const onQuit = () => {\r\n        quitRoom({ stores, history });\r\n    }\r\n\r\n    const onStart = () => {\r\n        startGame({ stores, correct, wrong });\r\n    }\r\n\r\n    const onCorrectChange = (event: any) => {\r\n        setCorrect(event.target.value)\r\n    }\r\n\r\n    const onWrongChange = (event: any) => {\r\n        setWrong(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"room-content-container\">\r\n            {refresh}\r\n            <div className=\"padding12\">\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">遊戲設定</Typography>\r\n                <div className=\"setting-field-content\">\r\n                    <FormControl variant=\"outlined\" fullWidth className=\"setting-field\">\r\n                        <InputLabel className=\"label\">臥底人數</InputLabel>\r\n                        <Select\r\n                            disabled={!isHost}\r\n                            value={setting.spy}\r\n                            onChange={handleSpyChange}\r\n                        >\r\n                            {genMenuItems('spy')}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" fullWidth className=\"setting-field\">\r\n                        <InputLabel className=\"label\">白板人數</InputLabel>\r\n                        <Select\r\n                            disabled={!isHost}\r\n                            value={setting.blank}\r\n                            onChange={handleBlankChange}\r\n                        >\r\n                            {genMenuItems('blank')}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={setting.isRandom}\r\n                                    onChange={handleIsRandomChange}\r\n                                    name=\"checkedB\"\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"隨機\"\r\n                        />\r\n                    </FormControl>\r\n                    {\r\n                        isHost && !setting.isRandom ?\r\n                            <TextField\r\n                                label=\"普通人\"\r\n                                fullWidth\r\n                                value={correct}\r\n                                onChange={onCorrectChange}\r\n                            /> : null\r\n                    }\r\n                    {\r\n                        isHost && !setting.isRandom ?\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"臥底\"\r\n                                value={wrong}\r\n                                onChange={onWrongChange}\r\n                            /> : null\r\n                    }\r\n                </div>\r\n                <div className=\"setting-actions\">\r\n                    <Button onClick={onQuit}>離開</Button>\r\n                    {\r\n                        isHost ?\r\n                            <Button onClick={onStart}>開始</Button> :\r\n                            null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n});\r\n\r\nexport default SettingComponent;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\index.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\routers\\index.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\home\\index.tsx",["163","164"],"import { observer } from 'mobx-react';\r\nimport React, { useState } from 'react';\r\nimport { Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from '@material-ui/core';\r\nimport './styles.css';\r\nimport { useStores } from '../../stores';\r\nimport { useHistory } from 'react-router';\r\nimport { createGameRoom, joinGameRoom } from '../../actions/game';\r\nimport ToolbarComponent from '../../components/toolbar';\r\n\r\nconst RoomImg = require('../../assets/images/room.png').default;\r\nconst JoinImg = require('../../assets/images/join.png').default;\r\n\r\nconst HomePage = observer(() => {\r\n    const stores = useStores();\r\n    const history = useHistory();\r\n\r\n    const [showJoinDialog, setShowJoinDialog] = useState(false);\r\n    const [joinRoomId, setJoinRoomId] = useState('');\r\n\r\n    const onCreateRoom = () => {\r\n        createGameRoom({ stores, history });\r\n    }\r\n\r\n    const onShowJoinDialog = () => {\r\n        setShowJoinDialog(true);\r\n    }\r\n\r\n    const onCancelJoin = () => {\r\n        setShowJoinDialog(false);\r\n        setJoinRoomId('');\r\n    }\r\n\r\n    const onJoinRoom = () => {\r\n        joinGameRoom({ stores, history, roomId: joinRoomId });\r\n    }\r\n\r\n    const onJoinRoomIdChange = (event: any) => {\r\n        setJoinRoomId(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <Card className=\"card\">\r\n                <CardContent>\r\n                    <ToolbarComponent title=\"歡迎遊玩誰是臥底\" />\r\n                    <div className=\"content\">\r\n                        <div className=\"button-container\" onClick={onCreateRoom}>\r\n                            <img src={RoomImg} className=\"button-img\" />\r\n                            <Typography className=\"button-text\" gutterBottom variant=\"h5\" component=\"h2\">創建房間</Typography>\r\n                        </div>\r\n                        <div className=\"button-container\" onClick={onShowJoinDialog}>\r\n                            <img src={JoinImg} className=\"button-img\" />\r\n                            <Typography className=\"button-text\" gutterBottom variant=\"h5\" component=\"h2\">參與房間</Typography>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Dialog open={showJoinDialog}>\r\n                <DialogTitle>請輸入房間編號</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        title=\"房間編號\"\r\n                        value={joinRoomId}\r\n                        onChange={onJoinRoomIdChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCancelJoin} color=\"primary\">取消</Button>\r\n                    <Button onClick={onJoinRoom} color=\"primary\">參與</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default HomePage;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\splash\\index.tsx",["165","166","167"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { init } from '../../actions/app';\r\nimport ChurchImg from '../../assets/images/church.jpg';\r\nimport { useStores } from '../../stores';\r\nimport './styles.css';\r\n\r\nfunction SplashPage() {\r\n    const history = useHistory();\r\n    const stores = useStores();\r\n\r\n    useEffect(() => {\r\n        init({ stores, history });\r\n    }, []);\r\n\r\n    return (\r\n        <div className={'container'}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SplashPage;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\login\\index.tsx",["168"],"import React, { useState } from 'react';\r\nimport { Button, Card, CardActions, CardContent, Typography, TextField } from '@material-ui/core';\r\nimport './styles.css';\r\nimport { useHistory } from 'react-router';\r\nimport { useStores } from '../../stores';\r\nimport { saveUsername } from '../../actions/app';\r\nimport { ActionState } from '../../models/common';\r\nconst SpyImg = require('../../assets/images/spy.png').default;\r\n\r\n\r\nconst LoginPage = () => {\r\n    const stores = useStores();\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState('');\r\n\r\n    const handleUsernameChange = (event: any) => {\r\n        setUsername(event.target.value);\r\n    }\r\n\r\n    const onSave = () => {\r\n        saveUsername({ stores, history, username });\r\n    }\r\n\r\n    const disabled = stores.appStore.loginState === ActionState.IN_PROGRESS;\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <Card className=\"card\">\r\n                <CardContent>\r\n                    <div className=\"toolbar\">\r\n                    <Typography className=\"title\" gutterBottom variant=\"h5\" component=\"h2\">歡迎遊玩 \"誰是臥底\"</Typography>\r\n                        <img src={SpyImg} className=\"logo\" />\r\n                    </div>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"用戶名稱\"\r\n                        value={username}\r\n                        disabled={disabled}\r\n                        onChange={(e) => handleUsernameChange(e)}\r\n                    />\r\n                </CardContent>\r\n                <CardActions className=\"footer\">\r\n                    <Button disabled={disabled} size=\"small\" color=\"primary\" onClick={onSave}>確認</Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\App.tsx",[],["169","170"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\audio.ts",["171"],"import { extendObservable } from 'mobx';\r\nimport * as _ from 'lodash';\r\n\r\nexport class AudioStore {\r\n    audio: any;\r\n\r\n    constructor() {\r\n        extendObservable(this, {\r\n            audio: null,\r\n        });\r\n    }\r\n\r\n    setAudio = (audio: any) => {\r\n        this.audio = audio;\r\n    }\r\n}\r\n\r\nexport default AudioStore;\r\n","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\gameBoard.tsx",["172","173","174","175","176","177"],"import { observer } from 'mobx-react';\r\nimport React, { useState } from 'react';\r\nimport { Card, CardContent, Typography, Avatar, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport './styles.css';\r\nimport { useStores } from '../../stores';\r\nimport { useHistory } from 'react-router';\r\nimport { reportPlayer } from '../../actions/game';\r\nimport * as _ from 'lodash';\r\nimport { Player } from '../../models/player';\r\nimport AdminIcon from '@material-ui/icons/Star';\r\nimport { Avatars } from '../../models/avatar';\r\n\r\nconst SpyImg = require('../../assets/images/spy.png').default;\r\n\r\nconst GameBoardComponent = observer(() => {\r\n    const stores = useStores();\r\n    const history = useHistory();\r\n\r\n    const [selectedPlayer, setSelectedPlayer] = useState<Player | null>(null);\r\n    const [showPlayerDialog, setShowPlayerDialog] = useState(false);\r\n    const { user } = stores.appStore;\r\n    const { room, refresh } = stores.gameStore;\r\n    const { host, players, setting } = room;\r\n    const isHost = user.id === host;\r\n\r\n    const onSelectPlayer = (player: Player) => {\r\n        if (player.status === 'dead' || (!setting.isRandom && player.identify === 'host')) {\r\n            return;\r\n        }\r\n\r\n        setSelectedPlayer(player);\r\n        setShowPlayerDialog(true);\r\n    }\r\n\r\n    const onCancelDialog = () => {\r\n        setSelectedPlayer(null);\r\n        setShowPlayerDialog(false);\r\n    }\r\n\r\n    const onReportPlayer = () => {\r\n        setShowPlayerDialog(false);\r\n        reportPlayer({\r\n            stores,\r\n            playerId: selectedPlayer ? selectedPlayer.id : ''\r\n        })\r\n    }\r\n\r\n    const getImage = (avatar?: string) => {\r\n        const defaultImage = (\r\n            <Avatar>\r\n                <PersonIcon />\r\n            </Avatar>\r\n        );\r\n\r\n        if (!avatar) {\r\n            return defaultImage;\r\n        }\r\n\r\n        try {\r\n            const selectedAvatar = Avatars.find(a => a.id === avatar);\r\n            const SelectedImage = require(`../../assets/images/cards/${selectedAvatar?.card}`).default;\r\n            return (\r\n                <img\r\n                    className=\"card-image\"\r\n                    src={SelectedImage}\r\n                />\r\n            )\r\n        } catch(err) {\r\n            return defaultImage;\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"gaming-card-content\">\r\n            {\r\n                players.map(player => (\r\n                    <Card key={`card-${player.id}`} className=\"person-card\" onClick={() => onSelectPlayer(player)}>\r\n                        <CardContent className=\"person-card-content\">\r\n                            <div className=\"person-avatar\">\r\n                                {\r\n                                    player.status === 'dead' || (!setting.isRandom && player.id === host) ?\r\n                                        (\r\n                                            <div className=\"status-layer\">\r\n                                                {\r\n                                                    (!setting.isRandom && player.id === host) ? '主持人' :\r\n                                                        player.identify === 'spy' ? '臥底' :\r\n                                                            player.identify === 'blank' ? '白板' :\r\n                                                                '普通人'\r\n                                                }\r\n                                            </div>\r\n                                        ) : null\r\n                                }\r\n                                {\r\n                                    player.id === host ? <AdminIcon className=\"admin-icon\" /> : null\r\n                                }\r\n                                {getImage(player.avatar)}\r\n                            </div>\r\n                            <Typography gutterBottom variant=\"body1\" component=\"h2\">\r\n                                {player.username}\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"body2\" component=\"h2\">\r\n                                {player.status === 'alive' ? '生存' : '陣亡'}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                ))\r\n            }\r\n            <Dialog open={showPlayerDialog}>\r\n                <DialogTitle>是否確認此玩家</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography className=\"title\" gutterBottom variant=\"body1\" component=\"h2\">\r\n                        {selectedPlayer?.username}\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCancelDialog} color=\"primary\">取消</Button>\r\n                    <Button onClick={onReportPlayer} color=\"primary\">確定</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default GameBoardComponent;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\index.ts",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\info.tsx",[],["178","179"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\peopleList.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\index.tsx",["180","181"],"import React from 'react';\r\nimport { useStores } from '../../stores';\r\nimport './styles.css';\r\nimport AvatarComponent from './avatar';\r\nimport NameComponent from './name';\r\nconst SpyImg = require('../../assets/images/spy.png').default;\r\n\r\ntype ToolBar = {\r\n    title: string\r\n}\r\n\r\nconst ToolbarComponent = ({ title }: ToolBar) => {\r\n    const stores = useStores();\r\n    const { user } = stores.appStore;\r\n\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <img src={SpyImg} className=\"logo\" />\r\n            <div className=\"title\">{title}</div>\r\n            <AvatarComponent />\r\n            <NameComponent />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToolbarComponent;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\avatar\\index.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\name.tsx",[],["182","183"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\avatar.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\avatar.ts",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":10,"column":13,"nodeType":"190","messageId":"191","endLine":10,"endColumn":19},{"ruleId":"184","replacedBy":"192"},{"ruleId":"186","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":3,"column":13,"nodeType":"190","messageId":"196","endLine":3,"endColumn":14},{"ruleId":"184","replacedBy":"197"},{"ruleId":"186","replacedBy":"198"},{"ruleId":"194","severity":1,"message":"195","line":2,"column":13,"nodeType":"190","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"184","replacedBy":"199"},{"ruleId":"186","replacedBy":"200"},{"ruleId":"194","severity":1,"message":"195","line":2,"column":13,"nodeType":"190","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":3,"column":13,"nodeType":"190","messageId":"196","endLine":3,"endColumn":14},{"ruleId":"194","severity":1,"message":"201","line":4,"column":10,"nodeType":"190","messageId":"196","endLine":4,"endColumn":16},{"ruleId":"194","severity":1,"message":"202","line":6,"column":10,"nodeType":"190","messageId":"196","endLine":6,"endColumn":17},{"ruleId":"194","severity":1,"message":"203","line":8,"column":10,"nodeType":"190","messageId":"196","endLine":8,"endColumn":21},{"ruleId":"188","severity":1,"message":"204","line":172,"column":14,"nodeType":"190","messageId":"191","endLine":172,"endColumn":26},{"ruleId":"194","severity":1,"message":"205","line":172,"column":67,"nodeType":"190","messageId":"196","endLine":172,"endColumn":79},{"ruleId":"194","severity":1,"message":"195","line":8,"column":13,"nodeType":"190","messageId":"196","endLine":8,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":30,"column":8,"nodeType":"208","endLine":30,"endColumn":10,"suggestions":"209"},{"ruleId":"194","severity":1,"message":"195","line":3,"column":13,"nodeType":"190","messageId":"196","endLine":3,"endColumn":14},{"ruleId":"194","severity":1,"message":"210","line":7,"column":10,"nodeType":"190","messageId":"196","endLine":7,"endColumn":16},{"ruleId":"194","severity":1,"message":"211","line":3,"column":29,"nodeType":"190","messageId":"196","endLine":3,"endColumn":39},{"ruleId":"194","severity":1,"message":"212","line":17,"column":13,"nodeType":"190","messageId":"196","endLine":17,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":25,"column":8,"nodeType":"208","endLine":25,"endColumn":10,"suggestions":"213"},{"ruleId":"194","severity":1,"message":"214","line":7,"column":39,"nodeType":"190","messageId":"196","endLine":7,"endColumn":49},{"ruleId":"215","severity":1,"message":"216","line":48,"column":29,"nodeType":"217","endLine":48,"endColumn":73},{"ruleId":"215","severity":1,"message":"216","line":52,"column":29,"nodeType":"217","endLine":52,"endColumn":73},{"ruleId":"194","severity":1,"message":"218","line":1,"column":28,"nodeType":"190","messageId":"196","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"219","line":4,"column":8,"nodeType":"190","messageId":"196","endLine":4,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":14,"column":8,"nodeType":"208","endLine":14,"endColumn":10,"suggestions":"220"},{"ruleId":"215","severity":1,"message":"216","line":33,"column":25,"nodeType":"217","endLine":33,"endColumn":62},{"ruleId":"184","replacedBy":"221"},{"ruleId":"186","replacedBy":"222"},{"ruleId":"194","severity":1,"message":"195","line":2,"column":13,"nodeType":"190","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":9,"column":13,"nodeType":"190","messageId":"196","endLine":9,"endColumn":14},{"ruleId":"194","severity":1,"message":"223","line":14,"column":7,"nodeType":"190","messageId":"196","endLine":14,"endColumn":13},{"ruleId":"194","severity":1,"message":"224","line":18,"column":11,"nodeType":"190","messageId":"196","endLine":18,"endColumn":18},{"ruleId":"194","severity":1,"message":"225","line":23,"column":19,"nodeType":"190","messageId":"196","endLine":23,"endColumn":26},{"ruleId":"194","severity":1,"message":"226","line":25,"column":11,"nodeType":"190","messageId":"196","endLine":25,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":64,"column":17,"nodeType":"217","endLine":67,"endColumn":19},{"ruleId":"184","replacedBy":"227"},{"ruleId":"186","replacedBy":"228"},{"ruleId":"194","severity":1,"message":"229","line":14,"column":13,"nodeType":"190","messageId":"196","endLine":14,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":18,"column":13,"nodeType":"217","endLine":18,"endColumn":50},{"ruleId":"184","replacedBy":"230"},{"ruleId":"186","replacedBy":"231"},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"@typescript-eslint/no-redeclare","'Socket' is already defined.","Identifier","redeclared",["232"],["233"],"@typescript-eslint/no-unused-vars","'_' is defined but never used.","unusedVar",["232"],["233"],["232"],["233"],"'Player' is defined but never used.","'Setting' is defined but never used.","'ActionState' is defined but never used.","'saveUsername' is already defined.","'saveUsername' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'stores'. Either include them or remove the dependency array.","ArrayExpression",["234"],"'Socket' is defined but never used.","'Typography' is defined but never used.","'host' is assigned a value but never used.",["235"],"'updateHost' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'ChurchImg' is defined but never used.",["236"],["232"],["233"],"'SpyImg' is assigned a value but never used.","'history' is assigned a value but never used.","'refresh' is assigned a value but never used.","'isHost' is assigned a value but never used.",["232"],["233"],"'user' is assigned a value but never used.",["232"],["233"],"no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"237","fix":"239"},{"desc":"237","fix":"240"},"Update the dependencies array to be: [history, stores]",{"range":"241","text":"242"},{"range":"243","text":"242"},{"range":"244","text":"242"},[1042,1044],"[history, stores]",[873,875],[427,429]]