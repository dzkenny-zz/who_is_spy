[{"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\reportWebVitals.ts":"1","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\common.ts":"2","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\room.ts":"3","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\utils\\request.ts":"4","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\game.ts":"5","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\app.ts":"6","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\actions\\app.ts":"7","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\player.ts":"8","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\index.tsx":"9","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\actions\\game.ts":"10","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\index.tsx":"11","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\setting.ts":"12","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\setting.tsx":"13","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\index.tsx":"14","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\routers\\index.tsx":"15","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\home\\index.tsx":"16","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\splash\\index.tsx":"17","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\login\\index.tsx":"18","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\App.tsx":"19","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\audio.ts":"20","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\gameBoard.tsx":"21","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\index.ts":"22","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\info.tsx":"23","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\peopleList.tsx":"24","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\index.tsx":"25","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\avatar\\index.tsx":"26","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\name.tsx":"27","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\avatar.tsx":"28","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\avatar.ts":"29","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\routers\\bgm.tsx":"30","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\actions\\audio.ts":"31","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\chatRoom.tsx":"32","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\leftPanel.tsx":"33"},{"size":440,"mtime":1608256494315,"results":"34","hashOfConfig":"35"},{"size":225,"mtime":1608523018117,"results":"36","hashOfConfig":"35"},{"size":946,"mtime":1608636481562,"results":"37","hashOfConfig":"35"},{"size":270,"mtime":1608537212822,"results":"38","hashOfConfig":"35"},{"size":820,"mtime":1608739248243,"results":"39","hashOfConfig":"35"},{"size":1054,"mtime":1608696130624,"results":"40","hashOfConfig":"35"},{"size":4719,"mtime":1608740306267,"results":"41","hashOfConfig":"35"},{"size":724,"mtime":1608605477252,"results":"42","hashOfConfig":"35"},{"size":2168,"mtime":1608740095033,"results":"43","hashOfConfig":"35"},{"size":8968,"mtime":1608739382378,"results":"44","hashOfConfig":"35"},{"size":1441,"mtime":1608740086505,"results":"45","hashOfConfig":"35"},{"size":789,"mtime":1608635748715,"results":"46","hashOfConfig":"35"},{"size":4977,"mtime":1608641953341,"results":"47","hashOfConfig":"35"},{"size":517,"mtime":1608256494310,"results":"48","hashOfConfig":"35"},{"size":1092,"mtime":1608733299519,"results":"49","hashOfConfig":"35"},{"size":2955,"mtime":1608733038776,"results":"50","hashOfConfig":"35"},{"size":544,"mtime":1608523202194,"results":"51","hashOfConfig":"35"},{"size":1823,"mtime":1608541669444,"results":"52","hashOfConfig":"35"},{"size":230,"mtime":1608256494306,"results":"53","hashOfConfig":"35"},{"size":726,"mtime":1608735028807,"results":"54","hashOfConfig":"35"},{"size":5146,"mtime":1608716962651,"results":"55","hashOfConfig":"35"},{"size":414,"mtime":1608604811745,"results":"56","hashOfConfig":"35"},{"size":3407,"mtime":1608738770247,"results":"57","hashOfConfig":"35"},{"size":4091,"mtime":1608703428903,"results":"58","hashOfConfig":"35"},{"size":683,"mtime":1608691639906,"results":"59","hashOfConfig":"35"},{"size":909,"mtime":1608696665866,"results":"60","hashOfConfig":"35"},{"size":1926,"mtime":1608695839871,"results":"61","hashOfConfig":"35"},{"size":2257,"mtime":1608696575006,"results":"62","hashOfConfig":"35"},{"size":2445,"mtime":1608740634450,"results":"63","hashOfConfig":"35"},{"size":1528,"mtime":1608735561395,"results":"64","hashOfConfig":"35"},{"size":2083,"mtime":1608735217272,"results":"65","hashOfConfig":"35"},{"size":1426,"mtime":1608740253904,"results":"66","hashOfConfig":"35"},{"size":1019,"mtime":1608740157715,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1vww63k",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\reportWebVitals.ts",[],["152","153"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\common.ts",["154"],"import { Socket } from \"socket.io-client\";\r\n\r\nexport enum ActionState  {\r\n    INITIAL = 'INITIAL',\r\n    IN_PROGRESS = 'IN_PROGRESS',\r\n    SUCCESS = 'SUCCESS',\r\n    FAILURE = 'FAILURE'\r\n}\r\n\r\nexport type Socket = typeof Socket;",["155","156"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\room.ts",["157"],"import { Setting } from \"./setting\";\r\nimport { Player } from \"./player\";\r\nimport * as _ from 'lodash';\r\n\r\nexport class Room {\r\n    id: string = '';\r\n    status: 'waiting' | 'progress' | 'end' = 'waiting';\r\n    players: Player[] = [];\r\n    setting: Setting = new Setting({});\r\n    host: string = '';\r\n\r\n    constructor(data: Partial<Room>) {\r\n        this.parse(data);\r\n    }\r\n\r\n    parse = (data: Partial<Room>) => {\r\n        this.id = data.id || '';\r\n        this.status = data.status || 'waiting';\r\n        this.players = (data.players || []).map(player => new Player(player));\r\n        this.setting = new Setting(data.setting || {});\r\n        this.host = data.host || '';\r\n    }\r\n\r\n    toJson = () => {\r\n        return {\r\n            id: this.id,\r\n            status: this.status,\r\n            host: this.host,\r\n            players: this.players.map(player => player.toJson()),\r\n            setting: this.setting.toJson()\r\n        };\r\n    }\r\n}","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\utils\\request.ts",[],["158","159"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\game.ts",["160"],"import { extendObservable } from 'mobx';\r\nimport * as _ from 'lodash';\r\nimport { Room } from '../models/room';\r\n\r\ntype History = {\r\n    username: string,\r\n    message: string\r\n}\r\n\r\nexport class GameStore {\r\n    room: Room = new Room({});\r\n    refresh: boolean = false;\r\n    winner: string = '';\r\n    history: History[] = [];\r\n\r\n    constructor() {\r\n        extendObservable(this, {\r\n            room: new Room({}),\r\n            refresh: false,\r\n            winner: '',\r\n            history: []\r\n        });\r\n    }\r\n\r\n    setRoom = (room: Room) => {\r\n        this.room = room;\r\n        this.refresh = !this.refresh;\r\n    }\r\n\r\n    setWinner = (winner: string) => {\r\n        this.winner = winner;\r\n    }\r\n\r\n    setHistory = (history: History[]) => {\r\n        this.history = history;\r\n    }\r\n}\r\n\r\nexport default GameStore;\r\n","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\app.ts",["161"],"import { extendObservable } from 'mobx';\r\nimport * as _ from 'lodash';\r\nimport { ActionState, Socket } from '../models/common';\r\nimport { User } from '../models/user';\r\n\r\n\r\nexport class AppStore {\r\n    socket? : Socket;\r\n    user: User = {\r\n        id: '',\r\n        username: '',\r\n        avatar: ''\r\n    };\r\n    loginState: ActionState = ActionState.INITIAL;\r\n    loading: boolean = false;\r\n\r\n    constructor() {\r\n        extendObservable(this, {\r\n            socket: null,\r\n            user: {\r\n                id: '',\r\n                username: '',\r\n                avatar: ''\r\n            },\r\n            loginState: ActionState.INITIAL,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    setSocket = (socket: Socket) => {\r\n        this.socket = socket;\r\n    }\r\n\r\n    setUser = (user: User) => {\r\n        this.user = user;\r\n    }\r\n\r\n    setLoginState = (loginState: ActionState) => {\r\n        this.loginState = loginState;\r\n    }\r\n\r\n    setLoading = (loading: boolean) => {\r\n        this.loading = loading;\r\n    }\r\n}\r\n\r\nexport default AppStore;\r\n","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\actions\\app.ts",["162","163","164","165","166","167"],"import { History } from 'history';\r\nimport { Stores } from '../stores';\r\nimport * as _ from 'lodash';\r\nimport { Player } from '../models/player';\r\nimport { Room } from '../models/room';\r\nimport { Setting } from '../models/setting';\r\nimport websocket from 'socket.io-client';\r\nimport { ActionState, Socket } from '../models/common';\r\nimport { request } from '../utils/request';\r\nimport { playAudio } from './audio';\r\n\r\ntype Init = {\r\n    stores: Stores,\r\n    history: History\r\n}\r\n\r\ntype saveUsername = {\r\n    stores: Stores,\r\n    history: History,\r\n    username: string\r\n}\r\n\r\ntype UpdateUsername = {\r\n    stores: Stores,\r\n    username: string\r\n}\r\n\r\ntype UpdateAvatar = {\r\n    stores: Stores,\r\n    avatar: string\r\n}\r\n\r\nexport const init = async ({ stores, history }: Init) => {\r\n    // generate user id and username\r\n    const resp = await request({\r\n        method: 'POST',\r\n        url: 'login'\r\n    });\r\n\r\n    stores.appStore.setUser({\r\n        id: resp.id,\r\n        username: resp.username,\r\n        avatar: resp.avatar\r\n    });\r\n\r\n    // after init user, start connect to socket\r\n    // const scoket: Socket = websocket('http://58.82.192.33/');\r\n    const scoket: Socket = websocket('http://localhost:3000/');\r\n\r\n    // common listen in whole game\r\n    scoket.on('/user/username', (username: string) => {\r\n        const { user } = stores.appStore;\r\n        user.username = username;\r\n        stores.appStore.setUser(user);\r\n    });\r\n\r\n    scoket.on('/user/avatar', (avatar: string) => {\r\n        const { user } = stores.appStore;\r\n        user.avatar = avatar;\r\n        playAudio({ stores, soundId: avatar });\r\n        stores.appStore.setUser(user);\r\n    });\r\n\r\n    scoket.on('/player/username', (resp: any) => {\r\n        const { id, username } = resp;\r\n        const { room, setRoom } = stores.gameStore;\r\n        const player = room.players.find(player => player.id === id);\r\n        if (player) {\r\n            player.username = username;\r\n        }\r\n        setRoom(room);\r\n    });\r\n\r\n    scoket.on('/player/avatar', (resp: any) => {\r\n        const { id, avatar } = resp;\r\n        const { room, setRoom } = stores.gameStore;\r\n        const player = room.players.find(player => player.id === id);\r\n        if (player) {\r\n            player.avatar = avatar;\r\n        }\r\n        setRoom(room);\r\n    })\r\n\r\n    stores.appStore.setSocket(scoket);\r\n\r\n    if (!resp.username) {\r\n        return history.replace('/login');\r\n    }\r\n\r\n    const gameResp = await request({\r\n        method: 'GET',\r\n        url: 'room'\r\n    });\r\n\r\n    if (!gameResp.room) {\r\n        return history.replace('/home');\r\n    }\r\n    else {\r\n        const room = new Room(gameResp.room);\r\n        stores.gameStore.setRoom(room);\r\n        if (room.status === 'progress') {\r\n            return history.replace('/gaming-room');\r\n        }\r\n        else {\r\n            return history.replace('/waiting-room');\r\n        }\r\n    }\r\n\r\n\r\n    // stores.appStore.setUser({\r\n    //     id: '160862470213998',\r\n    //     username: 'kenny'\r\n    // });\r\n\r\n    // stores.gameStore.setRoom(new Room({\r\n    //     id: \"697\",\r\n    //     status: \"progress\",\r\n    //     host: \"160862470213998\",\r\n    //     players: [\r\n    //         new Player({\r\n    //             id: \"1608613998\",\r\n    //             username: \"kenny\",\r\n    //             avatar: \"ironman\",\r\n    //             status: \"alive\",\r\n    //             identify: \"host\"\r\n    //         }),\r\n    //         new Player({\r\n    //             id: \"18624744887\",\r\n    //             username: \"json\",\r\n    //             avatar: \"naruto\",\r\n    //             status: \"alive\",\r\n    //             identify: \"normal\"\r\n    //         }),\r\n    //         new Player({\r\n    //             id: \"1608644623\",\r\n    //             username: \"jsons\",\r\n    //             avatar: \"superman\",\r\n    //             status: \"alive\",\r\n    //             identify: \"normal\"\r\n    //         })\r\n    //     ],\r\n    //     setting: new Setting({\r\n    //         blank: 0,\r\n    //         spy: 1,\r\n    //         isRandom: false,\r\n    //         correct: \"聖誕樹\",\r\n    //         wrong: \"大樹\"\r\n    //     })\r\n    // }));\r\n    // return history.replace('/waiting-room');\r\n}\r\n\r\nexport const saveUsername = async ({ stores, history, username }: saveUsername) => {\r\n    const { socket } = stores.appStore;\r\n    socket?.emit('/user/username', username);\r\n    history.replace('/home');\r\n}\r\n\r\nexport const updateUsername = async ({ stores, username }: UpdateUsername) => {\r\n    const { socket } = stores.appStore;\r\n    socket?.emit('/user/username', username);\r\n}\r\n\r\nexport const updateAvatar = async ({ stores, avatar }: UpdateAvatar) => {\r\n    const { socket } = stores.appStore;\r\n    socket?.emit('/user/avatar', avatar);\r\n}","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\player.ts",[],["168","169"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\index.tsx",["170","171","172"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\actions\\game.ts",["173","174"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\index.tsx",["175","176","177","178"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\setting.ts",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\setting.tsx",["179"],"import { observer } from 'mobx-react';\r\nimport React, { useState } from 'react';\r\nimport { Typography, Select, MenuItem, InputLabel, FormControl, Button, FormControlLabel, Switch, TextField } from '@material-ui/core';\r\nimport './styles.css';\r\nimport { useStores } from '../../stores';\r\nimport { useHistory } from 'react-router';\r\nimport { quitRoom, updateBlankNumber, updateHost, updateSpyNumber, startGame, updateIsRandom } from '../../actions/game';\r\n\r\nconst genMenuItems = (key: string) => {\r\n    return [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(index => (\r\n        <MenuItem key={`${key}-${index}`} value={index}>{index}</MenuItem>\r\n    ));\r\n}\r\n\r\nconst SettingComponent = observer(() => {\r\n    const stores = useStores();\r\n    const history = useHistory();\r\n\r\n    const [correct, setCorrect] = useState('');\r\n    const [wrong, setWrong] = useState('');\r\n\r\n    const { user } = stores.appStore;\r\n    const { room, refresh } = stores.gameStore;\r\n    const { host, setting } = room;\r\n    const isHost = user.id === host;\r\n\r\n    const handleSpyChange = (event: any) => {\r\n        updateSpyNumber({\r\n            stores,\r\n            number: event.target.value\r\n        });\r\n    }\r\n\r\n    const handleBlankChange = (event: any) => {\r\n        updateBlankNumber({\r\n            stores,\r\n            number: event.target.value\r\n        });\r\n    }\r\n\r\n    const handleIsRandomChange = (event: any) => {\r\n        if (!isHost) {\r\n            return;\r\n        }\r\n\r\n        updateIsRandom({\r\n            stores,\r\n            isRandom: event.target.checked\r\n        });\r\n    }\r\n\r\n    const onQuit = () => {\r\n        quitRoom({ stores, history });\r\n    }\r\n\r\n    const onStart = () => {\r\n        startGame({ stores, correct, wrong });\r\n    }\r\n\r\n    const onCorrectChange = (event: any) => {\r\n        setCorrect(event.target.value)\r\n    }\r\n\r\n    const onWrongChange = (event: any) => {\r\n        setWrong(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"room-content-container\">\r\n            {refresh}\r\n            <div className=\"padding12\">\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">遊戲設定</Typography>\r\n                <div className=\"setting-field-content\">\r\n                    <FormControl variant=\"outlined\" fullWidth className=\"setting-field\">\r\n                        <InputLabel className=\"label\">臥底人數</InputLabel>\r\n                        <Select\r\n                            disabled={!isHost}\r\n                            value={setting.spy}\r\n                            onChange={handleSpyChange}\r\n                        >\r\n                            {genMenuItems('spy')}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" fullWidth className=\"setting-field\">\r\n                        <InputLabel className=\"label\">白板人數</InputLabel>\r\n                        <Select\r\n                            disabled={!isHost}\r\n                            value={setting.blank}\r\n                            onChange={handleBlankChange}\r\n                        >\r\n                            {genMenuItems('blank')}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={setting.isRandom}\r\n                                    onChange={handleIsRandomChange}\r\n                                    name=\"checkedB\"\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"隨機\"\r\n                        />\r\n                    </FormControl>\r\n                    {\r\n                        isHost && !setting.isRandom ?\r\n                            <TextField\r\n                                label=\"普通人\"\r\n                                fullWidth\r\n                                value={correct}\r\n                                onChange={onCorrectChange}\r\n                            /> : null\r\n                    }\r\n                    {\r\n                        isHost && !setting.isRandom ?\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"臥底\"\r\n                                value={wrong}\r\n                                onChange={onWrongChange}\r\n                            /> : null\r\n                    }\r\n                </div>\r\n                <div className=\"setting-actions\">\r\n                    <Button onClick={onQuit}>離開</Button>\r\n                    {\r\n                        isHost ?\r\n                            <Button onClick={onStart}>開始</Button> :\r\n                            null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n});\r\n\r\nexport default SettingComponent;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\index.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\routers\\index.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\home\\index.tsx",["180","181"],"import { observer } from 'mobx-react';\r\nimport React, { useState } from 'react';\r\nimport { Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from '@material-ui/core';\r\nimport './styles.css';\r\nimport { useStores } from '../../stores';\r\nimport { useHistory } from 'react-router';\r\nimport { createGameRoom, joinGameRoom } from '../../actions/game';\r\nimport ToolbarComponent from '../../components/toolbar';\r\n\r\nconst RoomImg = require('../../assets/images/room.png').default;\r\nconst JoinImg = require('../../assets/images/join.png').default;\r\n\r\nconst HomePage = observer(() => {\r\n    const stores = useStores();\r\n    const history = useHistory();\r\n\r\n    const [showJoinDialog, setShowJoinDialog] = useState(false);\r\n    const [joinRoomId, setJoinRoomId] = useState('');\r\n\r\n    const onCreateRoom = () => {\r\n        createGameRoom({ stores, history });\r\n    }\r\n\r\n    const onShowJoinDialog = () => {\r\n        setShowJoinDialog(true);\r\n    }\r\n\r\n    const onCancelJoin = () => {\r\n        setShowJoinDialog(false);\r\n        setJoinRoomId('');\r\n    }\r\n\r\n    const onJoinRoom = () => {\r\n        joinGameRoom({ stores, history, roomId: joinRoomId });\r\n    }\r\n\r\n    const onJoinRoomIdChange = (event: any) => {\r\n        setJoinRoomId(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <Card className=\"card\">\r\n                <CardContent>\r\n                    <ToolbarComponent title=\"歡迎遊玩誰是臥底\" />\r\n                    <div className=\"content\">\r\n                        <div className=\"button-container\" onClick={onCreateRoom}>\r\n                            <img src={RoomImg} className=\"button-img\" />\r\n                            <Typography className=\"button-text\" gutterBottom variant=\"h5\" component=\"h2\">創建房間</Typography>\r\n                        </div>\r\n                        <div className=\"button-container\" onClick={onShowJoinDialog}>\r\n                            <img src={JoinImg} className=\"button-img\" />\r\n                            <Typography className=\"button-text\" gutterBottom variant=\"h5\" component=\"h2\">參與房間</Typography>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Dialog open={showJoinDialog}>\r\n                <DialogTitle>請輸入房間編號</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        title=\"房間編號\"\r\n                        value={joinRoomId}\r\n                        onChange={onJoinRoomIdChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCancelJoin} color=\"primary\">取消</Button>\r\n                    <Button onClick={onJoinRoom} color=\"primary\">參與</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default HomePage;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\splash\\index.tsx",["182","183","184"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { init } from '../../actions/app';\r\nimport ChurchImg from '../../assets/images/church.jpg';\r\nimport { useStores } from '../../stores';\r\nimport './styles.css';\r\n\r\nfunction SplashPage() {\r\n    const history = useHistory();\r\n    const stores = useStores();\r\n\r\n    useEffect(() => {\r\n        init({ stores, history });\r\n    }, []);\r\n\r\n    return (\r\n        <div className={'container'}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SplashPage;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\login\\index.tsx",["185"],"import React, { useState } from 'react';\r\nimport { Button, Card, CardActions, CardContent, Typography, TextField } from '@material-ui/core';\r\nimport './styles.css';\r\nimport { useHistory } from 'react-router';\r\nimport { useStores } from '../../stores';\r\nimport { saveUsername } from '../../actions/app';\r\nimport { ActionState } from '../../models/common';\r\nconst SpyImg = require('../../assets/images/spy.png').default;\r\n\r\n\r\nconst LoginPage = () => {\r\n    const stores = useStores();\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState('');\r\n\r\n    const handleUsernameChange = (event: any) => {\r\n        setUsername(event.target.value);\r\n    }\r\n\r\n    const onSave = () => {\r\n        saveUsername({ stores, history, username });\r\n    }\r\n\r\n    const disabled = stores.appStore.loginState === ActionState.IN_PROGRESS;\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <Card className=\"card\">\r\n                <CardContent>\r\n                    <div className=\"toolbar\">\r\n                    <Typography className=\"title\" gutterBottom variant=\"h5\" component=\"h2\">歡迎遊玩 \"誰是臥底\"</Typography>\r\n                        <img src={SpyImg} className=\"logo\" />\r\n                    </div>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"用戶名稱\"\r\n                        value={username}\r\n                        disabled={disabled}\r\n                        onChange={(e) => handleUsernameChange(e)}\r\n                    />\r\n                </CardContent>\r\n                <CardActions className=\"footer\">\r\n                    <Button disabled={disabled} size=\"small\" color=\"primary\" onClick={onSave}>確認</Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\App.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\audio.ts",["186"],"import { extendObservable } from 'mobx';\r\nimport * as _ from 'lodash';\r\n\r\nexport class AudioStore {\r\n    audio: any;\r\n    bgm: any;\r\n    muteBgm: boolean = true;\r\n    muteAudio: boolean = false;\r\n\r\n    constructor() {\r\n        extendObservable(this, {\r\n            audio: null,\r\n            bgm: null,\r\n            muteBgm: true,\r\n            muteAudio: false\r\n        });\r\n    }\r\n\r\n    setAudio = (audio: any) => {\r\n        this.audio = audio;\r\n    }\r\n\r\n    setBgm = (bgm: any) => {\r\n        this.bgm = bgm;\r\n    }\r\n\r\n    setMuteBgm = (muteBgm: boolean) => {\r\n        this.muteBgm = muteBgm;\r\n    }\r\n\r\n    setMuteAudio = (muteAudio: boolean) => {\r\n        this.muteAudio = muteAudio;\r\n    }\r\n}\r\n\r\nexport default AudioStore;\r\n","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\gameBoard.tsx",["187","188","189","190","191"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\stores\\index.ts",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\info.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\watingRoom\\peopleList.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\index.tsx",["192","193"],"import React from 'react';\r\nimport { useStores } from '../../stores';\r\nimport './styles.css';\r\nimport AvatarComponent from './avatar';\r\nimport NameComponent from './name';\r\nconst SpyImg = require('../../assets/images/spy.png').default;\r\n\r\ntype ToolBar = {\r\n    title: string\r\n}\r\n\r\nconst ToolbarComponent = ({ title }: ToolBar) => {\r\n    const stores = useStores();\r\n    const { user } = stores.appStore;\r\n\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <img src={SpyImg} className=\"logo\" />\r\n            <div className=\"title\">{title}</div>\r\n            <AvatarComponent />\r\n            <NameComponent />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToolbarComponent;","C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\avatar\\index.tsx",[],["194","195"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\name.tsx",[],["196","197"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\components\\toolbar\\avatar.tsx",[],["198","199"],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\models\\avatar.ts",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\routers\\bgm.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\actions\\audio.ts",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\chatRoom.tsx",[],"C:\\Users\\kenny\\workspaces\\who_is_spy\\src\\pages\\gamingRoom\\leftPanel.tsx",[],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":10,"column":13,"nodeType":"206","messageId":"207","endLine":10,"endColumn":19},{"ruleId":"200","replacedBy":"208"},{"ruleId":"202","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":3,"column":13,"nodeType":"206","messageId":"212","endLine":3,"endColumn":14},{"ruleId":"200","replacedBy":"213"},{"ruleId":"202","replacedBy":"214"},{"ruleId":"210","severity":1,"message":"211","line":2,"column":13,"nodeType":"206","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":2,"column":13,"nodeType":"206","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":3,"column":13,"nodeType":"206","messageId":"212","endLine":3,"endColumn":14},{"ruleId":"210","severity":1,"message":"215","line":4,"column":10,"nodeType":"206","messageId":"212","endLine":4,"endColumn":16},{"ruleId":"210","severity":1,"message":"216","line":6,"column":10,"nodeType":"206","messageId":"212","endLine":6,"endColumn":17},{"ruleId":"210","severity":1,"message":"217","line":8,"column":10,"nodeType":"206","messageId":"212","endLine":8,"endColumn":21},{"ruleId":"204","severity":1,"message":"218","line":153,"column":14,"nodeType":"206","messageId":"207","endLine":153,"endColumn":26},{"ruleId":"210","severity":1,"message":"219","line":153,"column":67,"nodeType":"206","messageId":"212","endLine":153,"endColumn":79},{"ruleId":"200","replacedBy":"220"},{"ruleId":"202","replacedBy":"221"},{"ruleId":"210","severity":1,"message":"211","line":8,"column":13,"nodeType":"206","messageId":"212","endLine":8,"endColumn":14},{"ruleId":"210","severity":1,"message":"222","line":9,"column":8,"nodeType":"206","messageId":"212","endLine":9,"endColumn":21},{"ruleId":"223","severity":1,"message":"224","line":31,"column":8,"nodeType":"225","endLine":31,"endColumn":10,"suggestions":"226"},{"ruleId":"210","severity":1,"message":"211","line":3,"column":13,"nodeType":"206","messageId":"212","endLine":3,"endColumn":14},{"ruleId":"210","severity":1,"message":"227","line":7,"column":10,"nodeType":"206","messageId":"212","endLine":7,"endColumn":16},{"ruleId":"210","severity":1,"message":"228","line":3,"column":29,"nodeType":"206","messageId":"212","endLine":3,"endColumn":39},{"ruleId":"210","severity":1,"message":"229","line":9,"column":8,"nodeType":"206","messageId":"212","endLine":9,"endColumn":24},{"ruleId":"210","severity":1,"message":"230","line":18,"column":13,"nodeType":"206","messageId":"212","endLine":18,"endColumn":17},{"ruleId":"223","severity":1,"message":"224","line":26,"column":8,"nodeType":"225","endLine":26,"endColumn":10,"suggestions":"231"},{"ruleId":"210","severity":1,"message":"232","line":7,"column":39,"nodeType":"206","messageId":"212","endLine":7,"endColumn":49},{"ruleId":"233","severity":1,"message":"234","line":48,"column":29,"nodeType":"235","endLine":48,"endColumn":73},{"ruleId":"233","severity":1,"message":"234","line":52,"column":29,"nodeType":"235","endLine":52,"endColumn":73},{"ruleId":"210","severity":1,"message":"236","line":1,"column":28,"nodeType":"206","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"237","line":4,"column":8,"nodeType":"206","messageId":"212","endLine":4,"endColumn":17},{"ruleId":"223","severity":1,"message":"224","line":14,"column":8,"nodeType":"225","endLine":14,"endColumn":10,"suggestions":"238"},{"ruleId":"233","severity":1,"message":"234","line":33,"column":25,"nodeType":"235","endLine":33,"endColumn":62},{"ruleId":"210","severity":1,"message":"211","line":2,"column":13,"nodeType":"206","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":9,"column":13,"nodeType":"206","messageId":"212","endLine":9,"endColumn":14},{"ruleId":"210","severity":1,"message":"239","line":14,"column":7,"nodeType":"206","messageId":"212","endLine":14,"endColumn":13},{"ruleId":"210","severity":1,"message":"240","line":18,"column":11,"nodeType":"206","messageId":"212","endLine":18,"endColumn":18},{"ruleId":"210","severity":1,"message":"241","line":23,"column":19,"nodeType":"206","messageId":"212","endLine":23,"endColumn":26},{"ruleId":"233","severity":1,"message":"234","line":68,"column":17,"nodeType":"235","endLine":71,"endColumn":19},{"ruleId":"210","severity":1,"message":"242","line":14,"column":13,"nodeType":"206","messageId":"212","endLine":14,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":18,"column":13,"nodeType":"235","endLine":18,"endColumn":50},{"ruleId":"200","replacedBy":"243"},{"ruleId":"202","replacedBy":"244"},{"ruleId":"200","replacedBy":"245"},{"ruleId":"202","replacedBy":"246"},{"ruleId":"200","replacedBy":"247"},{"ruleId":"202","replacedBy":"248"},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"@typescript-eslint/no-redeclare","'Socket' is already defined.","Identifier","redeclared",["249"],["250"],"@typescript-eslint/no-unused-vars","'_' is defined but never used.","unusedVar",["249"],["250"],"'Player' is defined but never used.","'Setting' is defined but never used.","'ActionState' is defined but never used.","'saveUsername' is already defined.","'saveUsername' is assigned a value but never used.",["249"],["250"],"'InfoComponent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'stores'. Either include them or remove the dependency array.","ArrayExpression",["251"],"'Socket' is defined but never used.","'Typography' is defined but never used.","'SettingComponent' is defined but never used.","'host' is assigned a value but never used.",["252"],"'updateHost' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'ChurchImg' is defined but never used.",["253"],"'SpyImg' is assigned a value but never used.","'history' is assigned a value but never used.","'refresh' is assigned a value but never used.","'user' is assigned a value but never used.",["249"],["250"],["249"],["250"],["249"],["250"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},{"desc":"254","fix":"257"},"Update the dependencies array to be: [history, stores]",{"range":"258","text":"259"},{"range":"260","text":"259"},{"range":"261","text":"259"},[1080,1082],"[history, stores]",[923,925],[427,429]]